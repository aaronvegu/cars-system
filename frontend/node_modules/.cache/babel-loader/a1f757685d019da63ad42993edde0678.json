{"ast":null,"code":"var _jsxFileName = \"/Users/aaronvegu/code/microservices/cars-system/frontend/src/routes/Producto.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom'; // for dynamic product IDs\nimport { Container, Typography, Card, CardContent } from '@mui/material';\nfunction Producto() {\n  // Use React Router's useParams to get the product ID from the URL\n  var _useParams = useParams(),\n    productId = _useParams.productId; // You can fetch product details from your backend API based on the productId\n  // For this example, we'll create dummy product data\n  var product = {\n    id: productId,\n    name: 'Product Name',\n    description: 'Product description goes here.',\n    price: '$99.99'\n    // Add more product details as needed\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    sx: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"div\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, product.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, product.description), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Price: \", product.price))));\n}\nexport default Producto;","map":{"version":3,"names":["React","useParams","Container","Typography","Card","CardContent","Producto","_useParams","productId","product","id","name","description","price","createElement","maxWidth","sx","paddingTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","elevation","variant","component","gutterBottom","color"],"sources":["/Users/aaronvegu/code/microservices/cars-system/frontend/src/routes/Producto.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom'; // for dynamic product IDs\nimport { Container, Typography, Card, CardContent } from '@mui/material';\n\nfunction Producto() {\n  // Use React Router's useParams to get the product ID from the URL\n  const { productId } = useParams();\n\n  // You can fetch product details from your backend API based on the productId\n\n  // For this example, we'll create dummy product data\n  const product = {\n    id: productId,\n    name: 'Product Name',\n    description: 'Product description goes here.',\n    price: '$99.99',\n    // Add more product details as needed\n  };\n\n  return (\n    <Container maxWidth='md' sx={{ paddingTop: 4 }}>\n      <Card elevation={3}>\n        <CardContent>\n          <Typography variant='h4' component='div' gutterBottom>\n            {product.name}\n          </Typography>\n          <Typography variant='subtitle1' color='text.secondary'>\n            {product.description}\n          </Typography>\n          <Typography variant='h6' color='primary'>\n            Price: {product.price}\n          </Typography>\n          {/* Add more product details as needed */}\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Producto;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,QAAQ,eAAe;AAExE,SAASC,QAAQA,CAAA,EAAG;EAClB;EAAA,IAAAC,UAAA,GACsBN,SAAS,CAAC,CAAC;IAAzBO,SAAS,GAAAD,UAAA,CAATC,SAAS,EAEjB;EAEA;EACA,IAAMC,OAAO,GAAG;IACdC,EAAE,EAAEF,SAAS;IACbG,IAAI,EAAE,cAAc;IACpBC,WAAW,EAAE,gCAAgC;IAC7CC,KAAK,EAAE;IACP;EACF,CAAC;;EAED,oBACEb,KAAA,CAAAc,aAAA,CAACZ,SAAS;IAACa,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7CvB,KAAA,CAAAc,aAAA,CAACV,IAAI;IAACoB,SAAS,EAAE,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjBvB,KAAA,CAAAc,aAAA,CAACT,WAAW;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACVvB,KAAA,CAAAc,aAAA,CAACX,UAAU;IAACsB,OAAO,EAAC,IAAI;IAACC,SAAS,EAAC,KAAK;IAACC,YAAY;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDd,OAAO,CAACE,IACC,CAAC,eACbX,KAAA,CAAAc,aAAA,CAACX,UAAU;IAACsB,OAAO,EAAC,WAAW;IAACG,KAAK,EAAC,gBAAgB;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnDd,OAAO,CAACG,WACC,CAAC,eACbZ,KAAA,CAAAc,aAAA,CAACX,UAAU;IAACsB,OAAO,EAAC,IAAI;IAACG,KAAK,EAAC,SAAS;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAChC,EAACd,OAAO,CAACI,KACN,CAED,CACT,CACG,CAAC;AAEhB;AAEA,eAAeP,QAAQ"},"metadata":{},"sourceType":"module"}